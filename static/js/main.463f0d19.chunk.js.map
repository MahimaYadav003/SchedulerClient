{"version":3,"sources":["images/home.png","images/student.png","images/detail.png","api/apiHelpers.js","api/baseUrls.js","api/schedulerApi.js","container/Scheduler.js","App.js","reportWebVitals.js","index.js"],"names":["save","baseUrl","url","body","method","axios","data","then","onSuccess","catch","onError","response","status","Error","error","code","variant","message","SCHEDULER_HOST","apiAddContent","studentDetails","console","log","apiGetDetails","get","Option","Select","Scheduler","useState","name","setName","classroom","setclassroom","rollno","setRollno","preference","setPreference","role","setRole","students","setStudentList","setStudentLoading","handleChange","value","handleClassChange","handleRoleChange","getStudentDetails","cancelSubmit","e","notification","warning","description","placement","AddStudent","sClass","setTimeout","success","descroption","arr","seatno","map","student","ob","push","selectRole","style","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","width","height","className","marginLeft","marginTop","placeholder","marginRight","onChange","handleHome","useEffect","background2","target","required","title","onConfirm","onCancel","okText","caccelText","onClick","background3","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.463f0d19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home.a496915c.png\";","export default __webpack_public_path__ + \"static/media/student.624cfe00.png\";","export default __webpack_public_path__ + \"static/media/detail.7604b31f.png\";","import axios from'axios';\r\n\r\nexport function get(baseUrl,url){\r\n    return axios.get(`${baseUrl}${url}`)\r\n    .then(onSuccess)\r\n    .catch(onError);\r\n}\r\n\r\nexport function deleteRequest(baseUrl,url){\r\n    return axios.delete(`${baseUrl}${url}`)\r\n    .then(onSuccess)\r\n    .catch(onError);\r\n}\r\n\r\nexport function save(baseUrl,url,body,method){\r\n    return axios({\r\n        method:method,\r\n        url:`${baseUrl}${url}`,\r\n        data:body,\r\n    })\r\n    .then(onSuccess)\r\n    .catch(onError);\r\n}\r\n\r\nexport function post(baseUrl,url,body){\r\n    console.log(body);\r\n    return save(baseUrl,url,body,'post')\r\n}\r\n\r\nexport function put(baseUrl,url,body){\r\n    return save(baseUrl,url,body,'put')\r\n}\r\n\r\nfunction onSuccess(response){\r\n    // 204 means The server has fulfilled the request but does not need to return \r\n    if(response.status !==204){\r\n        return response.data;\r\n    }\r\n    throw new Error('No Response Content');\r\n}\r\n\r\nfunction onError(error){\r\n    //when Software caused connection abort \r\n    if(error&& error.code==='ECONNABORATED'){\r\n        throw new Error({\r\n            status:504,\r\n            data:{\r\n                variant:'error',\r\n                message:'Server Timeout while Api Operation.'\r\n            },\r\n        });\r\n    }\r\n    const returnedError =error && error.response;\r\n    throw returnedError;\r\n}","export const SCHEDULER_HOST=\"https://schedulerspringboot.herokuapp.com/scheduler\";","import{\r\n    post,\r\n    // put,\r\n    get,\r\n    // deleteRequest,\r\n} from './apiHelpers';\r\n\r\nimport{\r\n    SCHEDULER_HOST,\r\n} from './baseUrls';\r\n\r\nexport function apiAddContent(studentDetails){\r\n    return post(SCHEDULER_HOST,\"/insert\",studentDetails);\r\n}\r\n\r\nexport function apiGetDetails(){\r\n    return get(SCHEDULER_HOST,\"/students\");\r\n}\r\n\r\n\r\n// export function apiGetStreamList(){\r\n//     return get(SCHEDULER_HOST,'/report/getdropdownDetails');\r\n// }\r\n\r\n// export function apiGetTemplateList(streamName){\r\n//     return get(SCHEDULER_HOST,`/email-template/fetch/${streamName}`);\r\n// }\r\n\r\n\r\n\r\n// export function apiDeleteTemplate(name){\r\n//     return deleteRequest(SCHEDULER_HOST,`/email-template/delete/${name}`);\r\n// }\r\n\r\n// export function apiUpdateTemplateContent(name,emailTemplate){\r\n//     return put(SCHEDULER_HOST,`/email-template/update/${name}`,emailTemplate);\r\n// }","import React, { useState, useEffect } from 'react';\r\nimport './Scheduler.css';\r\nimport 'antd/dist/antd.css';\r\nimport background from '../images/home.png'\r\nimport background2 from '../images/student.png'\r\nimport background3 from '../images/detail.png'\r\nimport { Popconfirm, notification, Select } from \"antd\";\r\n\r\nimport { apiAddContent, apiGetDetails } from '../api/schedulerApi.js';\r\nconst { Option } = Select;\r\nfunction Scheduler() {\r\n    const [name, setName] = useState(\"\");\r\n    const [classroom, setclassroom] = useState(\"\");\r\n    const [rollno, setRollno] = useState(\"\");\r\n    const [preference, setPreference] = useState(\"\");\r\n    const [role, setRole] = useState(\"Select Role\");\r\n    const [students, setStudentList] = useState([]);\r\n    const [StudentLoading, setStudentLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getStudentDetails()\r\n    }, []);\r\n    useEffect(() => {\r\n        selectRole()\r\n    }\r\n    )\r\n\r\n    function handleChange(value) {\r\n        setPreference(value);\r\n        console.log(`selected ${value}`);\r\n    }\r\n    function handleClassChange(value) {\r\n        setclassroom(value);\r\n        console.log(`selected ${value}`);\r\n    }\r\n    function handleRoleChange(value) {\r\n        getStudentDetails()\r\n        setRole(value);\r\n        console.log(`selected ${value}`);\r\n    }\r\n    const onSuccess = (e) => {\r\n        setTimeout(() => {\r\n            notification.success({ description: \"Your Response have been saved\", placement: 'topRight' });\r\n        })\r\n    }\r\n\r\n    function cancelSubmit(e) {\r\n        notification.warning({ description: 'Did not save response', placement: 'topRight' })\r\n    }\r\n    function AddStudent() {\r\n        const student = {\r\n            name: name,\r\n            rollno: rollno,\r\n            sClass: classroom,\r\n            preference: preference,\r\n        };\r\n        apiAddContent(student)\r\n            .then(response => {\r\n                onSuccess();\r\n            })\r\n            .catch(error => {\r\n                if (error) {\r\n                    if (error.status === 500) {\r\n                        notification.error({ descroption: \"You have already filled the form\", placement: 'topRight' });\r\n                    }\r\n                    notification.error({ descroption: \"SERVER ERROR\", placement: 'topRight' });\r\n                }\r\n                else {\r\n                    notification.error({ descroption: \"SERVER ERROR\", placement: 'topRight' });\r\n                }\r\n            })\r\n    }\r\n\r\n    function getStudentDetails() {\r\n        setStudentLoading(true);\r\n        apiGetDetails()\r\n            .then(response => {\r\n                let arr = [];\r\n                let seatno=0;\r\n                response.map((student) =>{\r\n                if(seatno+2<50)\r\n                if(student.preference===\"Offline Mode\" && student.sClass===classroom){\r\n                    \r\n                        let ob = {\r\n                            name: student.name,\r\n                            rollno:student.rollno,\r\n                            sClass:student.sClass,\r\n                            preference:student.preference,\r\n                            seatno:seatno+2\r\n                            }\r\n                            arr.push(ob)\r\n                            seatno=seatno+2\r\n                }\r\n                \r\n            })\r\n                setStudentList(arr);\r\n                setStudentLoading(false);\r\n            })\r\n            .catch(error => {\r\n                notification.error({ descroption: \"server not connected\", placement: 'topRight' });\r\n                setStudentLoading(false);\r\n            })\r\n    }\r\n    function selectRole() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    backgroundImage: `url(${background})`,\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'cover',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    width: '100vw',\r\n                    height: '100vh'\r\n                }}>\r\n                    {selectClass()}\r\n                <label className='labelstyle'\r\n                    style={{\r\n                        marginLeft: \"500px\",\r\n                    }}\r\n                >Select Role</label>\r\n                \r\n                <Select placeholder=\"Select Role\" style={{ width: 200}} onChange={handleRoleChange}>\r\n                    <Option value=\"Student\">Student</Option>\r\n                    <Option value=\"Teacher\">Teacher</Option>\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n    function showRole() {\r\n        if (role === \"Select Role\" || classroom===\" \") {\r\n            return (\r\n                <div>\r\n                    {selectRole()}\r\n                </div>\r\n            );\r\n        }\r\n        else if (role === \"Student\") {\r\n            return (\r\n                <div \r\n                style={{\r\n                    backgroundImage: `url(${background2})`,\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'cover',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    width: '100vw',\r\n                    height: '100vh'\r\n                }}\r\n                >\r\n                    <div \r\n                    style={{marginLeft:'40px'}}>\r\n                        <b className='heading'>Weekly Class Scheduler</b>\r\n                        {console.log(students[0])}\r\n                        {selectMode()}\r\n                        {SubmitButton()}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    {particularClass()}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    function handleHome() {\r\n        getStudentDetails()\r\n        setRole(\"Select Role\");\r\n        selectRole();\r\n    }\r\n    function particularClass(){\r\n        return(\r\n            <div>\r\n                {seeStudentDetails()}\r\n            </div>\r\n        )\r\n    }\r\n    function seeStudentDetails() {\r\n        \r\n        return (\r\n            \r\n            <div \r\n            style={{\r\n                backgroundImage: `url(${background3})`,\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                width: '100vw',\r\n                height: '100vh'\r\n            }}\r\n            >\r\n                <h1 className=\"student\">Student Details</h1>\r\n                <table className=\"table\">\r\n                    <tr>\r\n                        <th className=\"tableTh\">Roll no</th>\r\n                        <th className=\"tableTh\">Name</th>\r\n                        <th className=\"tableTh\">Class</th>\r\n                        <th className=\"tableTh\">Preference</th>\r\n                        <th className=\"tableTh\">SeatNo</th>\r\n                    </tr>\r\n                    \r\n                    {students.map((student) =>\r\n                        <tr>\r\n                            <td className=\"tableTd\">{student.rollno}</td>\r\n                            <td className=\"tableTd\">{student.name}</td>\r\n                            <td className=\"tableTd\">{student.sClass}</td>\r\n                            <td className=\"tableTd\">{student.preference}</td>\r\n                            <td className=\"tableTd\">{student.seatno}</td>\r\n                        </tr>\r\n                    \r\n                    )}\r\n                </table>\r\n                <div>\r\n                    <button className='submit'\r\n                        style={{ marginLeft: \"98px\" }}\r\n                        onClick={() => handleHome()}\r\n                    >Home</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    function SubmitButton() {\r\n        return (\r\n            <div className='title'>\r\n                <div>\r\n                    <label className='labelstyle'>Student Name</label>\r\n                    <input\r\n                        className='input-css'\r\n                        placeholder=\"Enter Student Name\"\r\n                        onChange={(e) => {\r\n                            setName(e.target.value)\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className='labelstyle'>Student Rollno.</label>\r\n                    <input\r\n                        className='input-css'\r\n                        placeholder=\"Enter Student Rollno.\"\r\n                        onChange={(e) => {\r\n                            setRollno(e.target.value)\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Popconfirm\r\n                        title=\"Are you Sure you want to submit?\"\r\n                        onConfirm={AddStudent}\r\n                        onCancel={cancelSubmit}\r\n                        okText=\"yes\"\r\n                        caccelText=\"No\"\r\n                    >\r\n                        <button className='submit'\r\n                        >Submit</button>\r\n                    </Popconfirm>\r\n                    <button className='submit'\r\n                        onClick={() => handleHome()}\r\n                    >Home</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function selectMode() {\r\n        return (\r\n            <>\r\n                <div className='scheduler'>\r\n                    <label className='labelstyle'>Select Preference</label>\r\n                    <Select placeholder=\"Select Preference\" style={{ width: 400, marginRight: '20px' }} onChange={handleChange}>\r\n                        <Option value=\"Online Mode\">Online Mode</Option>\r\n                        <Option value=\"Offline Mode\">Offline Mode</Option>\r\n                    </Select>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    function selectClass() {\r\n        return (\r\n            <>\r\n                <div className='scheduler'>\r\n                    <label className='labelstyle' style={{\r\n                        marginLeft: \"500px\",\r\n                        marginTop: \"100px\"\r\n                    }}>Select Class</label>\r\n                    <Select placeholder=\"Select Class\" style={{ width: 200, marginRight: '20px', marginTop: \"100px\" }}  onChange={handleClassChange}>\r\n                        <Option value=\"Class I\">Class I</Option>\r\n                        <Option value=\"Class II\">Class II</Option>\r\n                        <Option value=\"Class III\">Class III</Option>\r\n                        <Option value=\"Class IV\">Class IV</Option>\r\n                        <Option value=\"Class V\">Class V</Option>\r\n                        <Option value=\"Class VI\">Class VI</Option>\r\n                        <Option value=\"Class VII\">Class VII</Option>\r\n                        <Option value=\"Class VIII\">Class VIII</Option>\r\n                        <Option value=\"Class IX\">Class IX</Option>\r\n                        <Option value=\"Class X\">Class X</Option>\r\n                        <Option value=\"Class XI\">Class XI</Option>\r\n                        <Option value=\"Class XII\">Class XII</Option>\r\n                    </Select>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {showRole()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scheduler;","import Scheduler from './container/Scheduler.js';\nfunction App(){\n    return(\n        <div className=\"contentarea formwidth ng-scope\">\n            <Scheduler/>\n        </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}